name: Node CI

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # checkout the latest develop branch
      - uses: actions/checkout@v1

      ### Angular build ###

      # setup nodejs latest LTS version
      - name: Use Node.js 12.10.0
        uses: actions/setup-node@v1
        with:
          node-version: '12.10.0'

      # build frontend
      - name: npm install and build
        run: |
          cd src/main/web
          npm install
          npm run write-key-to-env-file
          npm run build
        env:
          CI: true
          NODE_OPTIONS: --max_old_space_size=4096
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}

      ### Java build ###

      # setup java 8
      - uses: actions/setup-java@v1
        with:
          # The JDK version to make available on the path. Takes a whole or semver Jdk version, or 1.x syntax (e.g. 1.8 => Jdk 8.x)
          java-version: '1.8'
          # (x64 or x86) - defaults to x64
          architecture: x64
      # build WAR file
      - name: Build with Maven
        run: mvn package --file pom.xml -U -DskipTests


      ### todo: add replace-environment-placeholders-in-dockerfile step
      - name: Replace environment placeholders in Dockerfile
        run: |
          cd src/main/web
          npm run write-config-to-dockerfile
        env:
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_USER_NAME: ${{ secrets.EMAIL_USER_NAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}

          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

          JWT_ACCESS_TOKEN_KEY: ${{ secrets.JWT_ACCESS_TOKEN_KEY }}
          JWT_REFRESH_TOKEN_KEY: ${{ secrets.JWT_REFRESH_TOKEN_KEY }}

      ### Docker build ###

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: meilenshop/shop
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: true
